apply plugin: 'java'

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

version rootProject.ext.VERSION_NAME
group rootProject.ext.GROUP

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  //compile group: 'com.tencent.mm', name: 'AndResGuard-core', version: version
  implementation project(':AndResGuard-core')
}

sourceSets {
  main {
    java {
      srcDir 'src'
    }
  }
}

jar {
  manifest {
    attributes 'Main-Class': 'com.tencent.mm.resourceproguard.cli.CliMain'
    attributes 'Manifest-Version': version
    attributes "Jar-Version": "${ANDRESGUARD_VESSION}"
    attributes "Build-Time": releaseTime()
  }
  from {
    configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
  }
}

// copy the jar to work directory
task buildJar(type: Copy, dependsOn: [build, jar]) {
  from('build/libs') {
    include '*' + version + '*.jar'
  }
  into('../tool_output')
}

def releaseTime() {
  return new Date().format("yyyy-MM-dd HH:mm ZZZ", TimeZone.getDefault())
}

defaultTasks 'buildJar'
