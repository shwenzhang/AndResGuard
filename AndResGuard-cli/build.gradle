apply plugin: 'java'

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

Properties properties = new Properties()
try {
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
} catch (Exception e) {
    properties.load(project.rootProject.file('travis.properties').newDataInputStream())
}
version = properties.getProperty("bintray.version")
group = properties.getProperty("bintray.groupId")

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    //compile group: 'com.tencent.mm', name: 'AndResGuard-core', version: version
    compile project(':AndResGuard-core')
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'com.tencent.mm.resourceproguard.cli.CliMain'
        attributes 'Manifest-Version': version
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

// copy the jar to work directory
task buildJar(type: Copy, dependsOn: [build, jar]) {
    from('build/libs') {
        include '*' + version + '*.jar'
    }
    into('../tool_output')
}

defaultTasks 'buildJar'
