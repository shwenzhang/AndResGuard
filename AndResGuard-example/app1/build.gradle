apply plugin: 'AndResGuard'
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

buildscript {
  repositories {
    mavenLocal()
    jcenter()
    google()
    maven { url 'https://maven.fabric.io/public' }
  }
  dependencies {
    // The Fabric Gradle plugin uses an open ended version to react
    // quickly to Android tooling updates
    classpath 'io.fabric.tools:gradle:latest.integration'
    classpath("com.tencent.mm:AndResGuard-gradle-plugin:${ANDRESGUARD_VERSION}") {
      changing = true
    }
  }
}

andResGuard {
  mappingFile = file("./resource_mapping.txt")
  use7zip = true
  useSign = true
  keepRoot = false
  mergeDuplicatedRes = true
  // add <yourpackagename>.R.drawable.icon into whitelist.
  // because the launcher will get the icon with his name
  whiteList = ["R.mipmap.ic_launcher",
               //https://docs.fabric.io/android/crashlytics/build-tools.html
               "R.string.com.crashlytics.*",
               "R.id.*",
               "R.drawable.a",]
  compressFilePattern = ["*.png",
                         "*.jpg",
                         "*.jpeg",
                         "*.gif",
                         "resources.arsc"]
  sevenzip {
    artifact = "com.tencent.mm:SevenZip:${ANDRESGUARD_SEVENZIP_VERSION}"
    //path = "/usr/local/bin/7za"
  }
}

repositories {
  jcenter()
  maven { url 'https://maven.fabric.io/public' }
}

crashlytics {
  enableNdk true
  androidNdkOut 'src/main/obj'
  androidNdkLibsOut 'src/main/libs'
}


android {
  compileSdkVersion 26
  buildToolsVersion '28.0.1'


  signingConfigs {
    release {
      try {
        storeFile file("../keystore test/release.keystore")
        storePassword "testres"
        keyAlias "testres"
        keyPassword "testres"
        v2SigningEnabled true
      } catch (ex) {
        throw new InvalidUserDataException(ex.toString())
      }
    }

    debug {
      storeFile file("../keystore test/debug.keystore")
    }
  }

  //    productFlavors {
  //        flavor2 {
  //            println("@@@THIS IS FLAVOR2@@@")
  //            applicationId 'andresguard.tencent.com.andresguard_example.flavor2'
  //        }
  //
  //        flavor1 {
  //            println("@@@THIS IS FLAVOR1@@@")
  //            applicationId 'andresguard.tencent.com.andresguard_example.flavor1'
  //        }
  //
  //        aaa {
  //            println("@@@THIS IS aaa@@@")
  //            applicationId 'andresguard.tencent.com.andresguard_example.aaa'
  //        }
  //    }

  buildTypes {
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      shrinkResources true
      zipAlignEnabled true
      pseudoLocalesEnabled true
      signingConfig signingConfigs.release
    }

    releaseLog {
      buildConfigField "boolean", "DEBUG_MODE", "false"
      buildConfigField "boolean", "LOG_DEBUG", "true"
      debuggable true
      minifyEnabled true
      zipAlignEnabled true
      shrinkResources true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), "proguard-rules.pro"
      signingConfig signingConfigs.release

      matchingFallbacks = ['release']
    }
  }


  defaultConfig {
    applicationId "andresguard.tencent.com.andresguard_example"
    minSdkVersion 14
    targetSdkVersion 26
    versionCode 2
    versionName "1.1"
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  testImplementation 'junit:junit:4.12'
  implementation project(':libres')
  implementation 'com.android.support:appcompat-v7:26.1.0'
  implementation 'com.android.support:design:26.1.0'
  // Crashlytics Kit
  implementation('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
    transitive = true
  }
  // NDK Kit
  implementation('com.crashlytics.sdk.android:crashlytics-ndk:1.1.6@aar') {
    transitive = true
  }
  // NDK Kit
  implementation('com.crashlytics.sdk.android:crashlytics-ndk:1.1.6@aar') {
    transitive = true
  }
}
